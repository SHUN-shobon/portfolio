---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";
import { Temporal } from "temporal-polyfill";

import Heading from "@/components/Heading.astro";
import * as queries from "@/styles/media-queries.css";

import { slugToYearMonth } from "../utils";
import Entry from "./Entry.astro";

const entries = await getCollection("works").then((entries) =>
	entries.sort(
		(a, b) =>
			-Temporal.PlainYearMonth.compare(
				slugToYearMonth(a.slug),
				slugToYearMonth(b.slug),
			),
	),
);
---

<section>
	<Heading>Works</Heading>
	<ul class="grid gap-4 sm:grid-cols-2">
		{
			entries.map((entry) => (
				<li class="work-card">
					<button
						class="work-card-button"
						id={`work-card-button-${entry.slug}`}
						aria-labelledby={`work-card-title-${entry.slug}`}
						aria-controls={`work-card-modal-${entry.slug}`}
					>
						<article class="grid aspect-video w-full overflow-hidden">
							<Image
								src={entry.data.image}
								alt=""
								widths={[300, 600, 1200, entry.data.image.width]}
								sizes={`${queries.sm} 300px, 600px`}
								quality="low"
								class="col-span-full row-span-full aspect-video h-auto w-full object-cover transition-transform duration-200 ease-in-out hover:scale-110"
							/>
							<h3
								id={`work-card-title-${entry.slug}`}
								class="z-10 col-span-full row-span-full w-full self-end overflow-hidden text-ellipsis text-nowrap bg-[linear-gradient(transparent,40%,rgb(0_30_48/0.8))] p-2 pt-4 text-start text-2xl"
							>
								{entry.data.title}
							</h3>
						</article>
					</button>
					<dialog
						id={`work-card-modal-${entry.slug}`}
						class="work-card-modal max-h-[min(100%,100dvh-theme(spacing.4))] w-[min(100%,100dvw-theme(spacing.4))] max-w-prose overscroll-contain rounded-md bg-slate-800 text-white backdrop:bg-black backdrop:bg-opacity-50"
					>
						<div class="grid gap-4 p-4">
							<form method="dialog" class="flex justify-end">
								<button
									type="submit"
									class="z-10 rounded-md border border-white bg-slate-800"
								>
									<Icon
										name="material-symbols-light:close"
										aria-label="閉じる"
										class="text-4xl"
									/>
								</button>
							</form>
							<Entry entry={entry} />
						</div>
					</dialog>
				</li>
			))
		}
	</ul>
</section>
<script>
	const cards = document.querySelectorAll(".work-card");
	for (const card of cards) {
		const button = card.querySelector(
			".work-card-button",
		)! as HTMLButtonElement;
		const modal = card.querySelector(".work-card-modal")! as HTMLDialogElement;

		button.addEventListener("click", () => {
			modal.showModal();
		});

		modal.addEventListener("click", (event) => {
			if (event.target === modal) {
				modal.close();
			}
		});
	}
</script>
